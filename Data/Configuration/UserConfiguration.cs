using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using IAR.Models;

public class UserConfiguration : IEntityTypeConfiguration<User>
{
    public void Configure(EntityTypeBuilder<User> builder)
    {
            // Set primary key to id
            builder.HasKey(u => u.AccountName);
            
            // AccountName is not generated by the database
            builder.Property(u => u.AccountName)
                .ValueGeneratedNever();

            // User has many Assets (ExecutiveSponsorAccountName)
            builder.HasMany(u => u.ExecutiveSponsorAssets)
                .WithOne(a => a.ExecutiveSponsor)
                .HasForeignKey(a => a.ExecutiveSponsorAccountName);

            // User has many Assets (DataOwnerAccountName)
            builder.HasMany(u => u.DataOwnerAssets)
                .WithOne(a => a.DataOwner)
                .HasForeignKey(a => a.DataOwnerAccountName)
                .OnDelete(DeleteBehavior.Restrict);

            // User has many Assets (DataStewardAccountName)
            builder.HasMany(u => u.DataStewardAssets)
                .WithOne(a => a.DataSteward)
                .HasForeignKey(a => a.DataStewardAccountName)
                .OnDelete(DeleteBehavior.Restrict);
    }
}