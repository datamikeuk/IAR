@page ""
@model IAR.Pages.ViewModel

@{
    ViewData["Title"] = "View";
    var isAdmin = User.FindFirst("Role")?.Value == "Admin";
    var accountName = User.Identity?.Name?.Split('\\')[1];
}

<div id="modal-placeholder"></div>

<body>
    </br>
    <div class="form-group">
        <button type="button" class="btn btn-secondary" data-toggle="ajax-modal" data-url="@Url.Page("View","AssetModal")">
            New Asset
        </button>
        <button type="button" id="review" class="btn btn-secondary" data-bs-toggle="button" onclick="$('#asset-table').DataTable().ajax.reload();">Needs Review</button>
        <button type="button" id="responsible" class="btn btn-secondary" data-bs-toggle="button" onclick="$('#asset-table').DataTable().ajax.reload();">My Assets</button>
    </div>
    </br>
    <table id="asset-table" class="table table-striped table-hover table-bordered" style="width:100%">
        <thead>
            <tr>
                @* Created table headers using asp labels *@
                <th>@Html.DisplayNameFor(model => model.Asset.ID)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.Name)</th>
                <th>Responsibilites</th>
                @* <th>@Html.DisplayNameFor(model => model.Asset.BackEndPlatform)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.FrontEndPlatform)</th> *@
                @* <th>Third Parties</th> *@
                <th>@Html.DisplayNameFor(model => model.Asset.LastReviewDate)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.NextReviewDate)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.CreatedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.CreatedBy)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.UpdatedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.UpdatedBy)</th>
                <th></th> @* delete button *@
            </tr>
        </thead>
    </table>
</body>

@section Scripts {
    <link rel="stylesheet" href="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.css" />
    <script src="~/lib/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#asset-table').DataTable({
                ajax: {
                    url: "@Url.Content("~/api/tabledata")",
                    data: function(d){
                        if ($('#responsible').hasClass('active')) {
                            d.accountname = "@accountName";
                        }
                        if ($('#review').hasClass('active')) {
                            d.review = true;
                        }
                    },
                    // Tell datatables to expect an array
                    dataSrc: '',
                },
                columns: [
                    { data: 'id', visible: false},
                    { data: 'name' },
                    // combine executive sponsor, data owner and data steward as list
                    { data: null,
                        render: function(data, type, row){
                            var list = [];
                            if (data.executiveSponsorAccountName == "@accountName") {
                                executiveSponsorName = ('<span class="text-danger">Executive Sponsor: ' + data.executiveSponsorName + '</span>');
                            } else {
                                executiveSponsorName = ('Executive Sponsor: ' + data.executiveSponsorName);
                            }                        
                            if (data.dataStewardAccountName == "@accountName") {
                                dataOwnerName = ('<span class="text-danger">Executive Sponsor: ' + data.dataStewardName + '</span>');
                            } else {
                                dataOwnerName = ('Executive Sponsor: ' + data.dataStewardName);
                            }                        
                            if (data.dataStewardAccountName == "@accountName") {
                                dataStewardName = ('<span class="text-danger">Executive Sponsor: ' + data.dataStewardName + '</span>');
                            } else {
                                dataStewardName = ('Executive Sponsor: ' + data.dataStewardName);
                            }                        

                            list.push(executiveSponsorName);
                            list.push(dataOwnerName);
                            list.push(dataStewardName);
  
                            // list join with line breaks
                            return list.join("<br/>");
                        }
                    },
                    @* { data: 'backEndPlatformName' },
                    { data: 'frontEndPlatformName' }, *@
                    @* { data: 'thirdPartyNames',
                        render: function(data, type, row){
                            return data.split(",").join("<br/>");
                        }
                    }, *@
                    // render as date
                    { data: 'lastReviewDate',
                      render: function(data, type, row){
                          return new Date(data).toLocaleDateString() + ' ' + new Date(data).toLocaleTimeString();
                      } },
                    // render as date
                    { data: 'nextReviewDate',
                      render: function(data, type, row){
                          return new Date(data).toLocaleDateString() + ' ' + new Date(data).toLocaleTimeString();
                      } },
                    // render as date
                    { data: 'createdDate',
                      render: function(data, type, row){
                          return new Date(data).toLocaleDateString() + ' ' + new Date(data).toLocaleTimeString();
                      } },
                    { data: 'createdBy' },
                    //render as date
                    { data: 'updatedDate',
                      render: function(data, type, row){
                          return new Date(data).toLocaleDateString();
                      } },
                    { data: 'updatedBy' },
                    // delete button
                    {
                        data: null,
                        className: "dt-center",
                        render : function(data, type, row){
                            return '<button type="button" id="delete-asset" class="btn btn-secondary bi-trash"></button>';
                        },
                        searchable: false,
                        orderable: false,
                        visible: "@isAdmin" == "True"
                    },
                ],
                paging: true, 
                @* serverSide: true *@
            });
        });

        // Handle row clicks
        $(document).ready(function () {
            var table = $('#asset-table').DataTable();

            $('#asset-table tbody').on('click', 'tr', function (e) {
                var data = table.row(this).data();
                if ($(e.target).hasClass('bi-trash')) {
                    window.location.href = "Delete/" + data['id']; 
                } else {
                    window.location.href = "Edit/" + data['id'];   	
                } 
                
            });
        });
    </script>
}