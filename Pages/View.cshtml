@page ""
@model IAR.Pages.ViewModel

@{
    ViewData["Title"] = "View";
}

<div id="modal-placeholder"></div>

<body>
    </br>
    <div class="form-group">
        <button type="button" class="btn btn-secondary" data-toggle="ajax-modal" 
            data-url="@Url.Page("View","AssetModal")">
            +
        </button>
        <label for="ownerFilter">My Assets</label>
        <input id="ownerFilter" type="checkbox" onclick="$('#asset-table').DataTable().ajax.reload();"/>
    </div>
    </br>
    <table id="asset-table" class="table table-striped table-hover table-bordered" style="width:100%">
        <thead>
            <tr>
                @* Created table headers using asp labels *@
                <th>@Html.DisplayNameFor(model => model.Asset.ID)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.Name)</th>
                <th>Responisibilites</th>
                <th>@Html.DisplayNameFor(model => model.Asset.BackEndPlatform)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.FrontEndPlatform)</th>
                @* <th>Third Parties</th> *@
                <th>@Html.DisplayNameFor(model => model.Asset.CreatedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.CreatedBy)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.UpdatedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Asset.UpdatedBy)</th>
                <th></th>
            </tr>
        </thead>
    </table>
</body>

@section Scripts {
    <link rel="stylesheet" href="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.css" />
    <script src="~/lib/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#asset-table').DataTable({
                ajax: {
                    url: "@Url.Content("~/api/tabledata")",
                    //if owner filter is checked, run function to compare owner to current user
                    data: function(d){
                        if ($('#ownerFilter').is(':checked')) {
                            d.owner = "@User.Identity?.Name?.Split('\\')[1]";
                        }
                    },
                    // Tell datatables to expect an array
                    dataSrc: '',
                },
                columns: [
                    { data: 'id', visible: false},
                    { data: 'name' },
                    // combine executive sponsor, data owner and data steward as list
                    { data: null,
                        render: function(data, type, row){
                            var list = [];
                            if (data.executiveSponsorName != null) {
                                list.push('Executive Sponsor: ' + data.executiveSponsorName);
                            }
                            if (data.dataOwnerName != null) {
                                list.push('Data Owner: ' + data.dataOwnerName);
                            }
                            if (data.dataStewardName != null) {
                                list.push('Data Steward: ' + data.dataStewardName);
                            }
                            // list join with line breaks
                            return list.join("<br/>");
                        }
                    },
                    { data: 'backEndPlatformName' },
                    { data: 'frontEndPlatformName' },
                    @* { data: 'thirdPartyNames',
                        render: function(data, type, row){
                            return data.split(",").join("<br/>");
                        }
                    }, *@
                    // render as date
                    { data: 'createdDate',
                      render: function(data, type, row){
                          return new Date(data).toLocaleDateString() + ' ' + new Date(data).toLocaleTimeString();
                      } },
                    { data: 'createdBy' },
                    //render as date
                    { data: 'updatedDate',
                      render: function(data, type, row){
                          return new Date(data).toLocaleDateString();
                      } },
                    { data: 'updatedBy' },
                    // edit button
                    {
                        date: null,
                        render : function(data, type, row){
                            return '<a class = "btn btn-secondary bi-pencil-square" href = "Edit/' + row.id + '"></button></a>';
                        },
                        searchable: false,
                        orderable: false,

                    }
                ],
                paging: true, 
                @* serverSide: true *@
            });
        });

        // redirect to edit page on row click
        $(document).ready(function () {
            var table = $('#asset-table').DataTable();

            $('#asset-table tbody').on('click', 'tr', function () {
                var data = table.row(this).data();
                window.location.href = "Edit/" + data['id'];
            });
        });
    </script>
}